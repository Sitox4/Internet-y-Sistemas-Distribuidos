/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package es.udc.ws.app.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2024-01-16")
public class ThriftPartidoService {

  public interface Iface {

    public ThriftPartidoDto addPartido(ThriftPartidoDto partidoDto) throws ThriftInputValidationException, org.apache.thrift.TException;

    public java.util.List<ThriftPartidoDto> findPartidos(java.lang.String fechaincio, java.lang.String fechafin) throws org.apache.thrift.TException, InputValidationException;

  }

  public interface AsyncIface {

    public void addPartido(ThriftPartidoDto partidoDto, org.apache.thrift.async.AsyncMethodCallback<ThriftPartidoDto> resultHandler) throws org.apache.thrift.TException;

    public void findPartidos(java.lang.String fechaincio, java.lang.String fechafin, org.apache.thrift.async.AsyncMethodCallback<java.util.List<ThriftPartidoDto>> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public ThriftPartidoDto addPartido(ThriftPartidoDto partidoDto) throws ThriftInputValidationException, org.apache.thrift.TException
    {
      send_addPartido(partidoDto);
      return recv_addPartido();
    }

    public void send_addPartido(ThriftPartidoDto partidoDto) throws org.apache.thrift.TException
    {
      addPartido_args args = new addPartido_args();
      args.setPartidoDto(partidoDto);
      sendBase("addPartido", args);
    }

    public ThriftPartidoDto recv_addPartido() throws ThriftInputValidationException, org.apache.thrift.TException
    {
      addPartido_result result = new addPartido_result();
      receiveBase(result, "addPartido");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addPartido failed: unknown result");
    }

    public java.util.List<ThriftPartidoDto> findPartidos(java.lang.String fechaincio, java.lang.String fechafin) throws org.apache.thrift.TException
    {
      send_findPartidos(fechaincio, fechafin);
      return recv_findPartidos();
    }

    public void send_findPartidos(java.lang.String fechaincio, java.lang.String fechafin) throws org.apache.thrift.TException
    {
      findPartidos_args args = new findPartidos_args();
      args.setFechaincio(fechaincio);
      args.setFechafin(fechafin);
      sendBase("findPartidos", args);
    }

    public java.util.List<ThriftPartidoDto> recv_findPartidos() throws org.apache.thrift.TException
    {
      findPartidos_result result = new findPartidos_result();
      receiveBase(result, "findPartidos");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findPartidos failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void addPartido(ThriftPartidoDto partidoDto, org.apache.thrift.async.AsyncMethodCallback<ThriftPartidoDto> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addPartido_call method_call = new addPartido_call(partidoDto, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addPartido_call extends org.apache.thrift.async.TAsyncMethodCall<ThriftPartidoDto> {
      private ThriftPartidoDto partidoDto;
      public addPartido_call(ThriftPartidoDto partidoDto, org.apache.thrift.async.AsyncMethodCallback<ThriftPartidoDto> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.partidoDto = partidoDto;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addPartido", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addPartido_args args = new addPartido_args();
        args.setPartidoDto(partidoDto);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public ThriftPartidoDto getResult() throws ThriftInputValidationException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_addPartido();
      }
    }

    public void findPartidos(java.lang.String fechaincio, java.lang.String fechafin, org.apache.thrift.async.AsyncMethodCallback<java.util.List<ThriftPartidoDto>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findPartidos_call method_call = new findPartidos_call(fechaincio, fechafin, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findPartidos_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<ThriftPartidoDto>> {
      private java.lang.String fechaincio;
      private java.lang.String fechafin;
      public findPartidos_call(java.lang.String fechaincio, java.lang.String fechafin, org.apache.thrift.async.AsyncMethodCallback<java.util.List<ThriftPartidoDto>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.fechaincio = fechaincio;
        this.fechafin = fechafin;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findPartidos", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findPartidos_args args = new findPartidos_args();
        args.setFechaincio(fechaincio);
        args.setFechafin(fechafin);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<ThriftPartidoDto> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findPartidos();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("addPartido", new addPartido());
      processMap.put("findPartidos", new findPartidos());
      return processMap;
    }

    public static class addPartido<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addPartido_args> {
      public addPartido() {
        super("addPartido");
      }

      public addPartido_args getEmptyArgsInstance() {
        return new addPartido_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public addPartido_result getResult(I iface, addPartido_args args) throws org.apache.thrift.TException {
        addPartido_result result = new addPartido_result();
        try {
          result.success = iface.addPartido(args.partidoDto);
        } catch (ThriftInputValidationException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class findPartidos<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findPartidos_args> {
      public findPartidos() {
        super("findPartidos");
      }

      public findPartidos_args getEmptyArgsInstance() {
        return new findPartidos_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public findPartidos_result getResult(I iface, findPartidos_args args) throws org.apache.thrift.TException {
        findPartidos_result result = new findPartidos_result();
        result.success = iface.findPartidos(args.fechaincio, args.fechafin);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("addPartido", new addPartido());
      processMap.put("findPartidos", new findPartidos());
      return processMap;
    }

    public static class addPartido<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addPartido_args, ThriftPartidoDto> {
      public addPartido() {
        super("addPartido");
      }

      public addPartido_args getEmptyArgsInstance() {
        return new addPartido_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<ThriftPartidoDto> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<ThriftPartidoDto>() { 
          public void onComplete(ThriftPartidoDto o) {
            addPartido_result result = new addPartido_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            addPartido_result result = new addPartido_result();
            if (e instanceof ThriftInputValidationException) {
              result.e = (ThriftInputValidationException) e;
              result.setEIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addPartido_args args, org.apache.thrift.async.AsyncMethodCallback<ThriftPartidoDto> resultHandler) throws org.apache.thrift.TException {
        iface.addPartido(args.partidoDto,resultHandler);
      }
    }

    public static class findPartidos<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findPartidos_args, java.util.List<ThriftPartidoDto>> {
      public findPartidos() {
        super("findPartidos");
      }

      public findPartidos_args getEmptyArgsInstance() {
        return new findPartidos_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<ThriftPartidoDto>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<ThriftPartidoDto>>() { 
          public void onComplete(java.util.List<ThriftPartidoDto> o) {
            findPartidos_result result = new findPartidos_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            findPartidos_result result = new findPartidos_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findPartidos_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<ThriftPartidoDto>> resultHandler) throws org.apache.thrift.TException {
        iface.findPartidos(args.fechaincio, args.fechafin,resultHandler);
      }
    }

  }

  public static class addPartido_args implements org.apache.thrift.TBase<addPartido_args, addPartido_args._Fields>, java.io.Serializable, Cloneable, Comparable<addPartido_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addPartido_args");

    private static final org.apache.thrift.protocol.TField PARTIDO_DTO_FIELD_DESC = new org.apache.thrift.protocol.TField("partidoDto", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addPartido_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addPartido_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable ThriftPartidoDto partidoDto; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PARTIDO_DTO((short)1, "partidoDto");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PARTIDO_DTO
            return PARTIDO_DTO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PARTIDO_DTO, new org.apache.thrift.meta_data.FieldMetaData("partidoDto", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ThriftPartidoDto.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addPartido_args.class, metaDataMap);
    }

    public addPartido_args() {
    }

    public addPartido_args(
      ThriftPartidoDto partidoDto)
    {
      this();
      this.partidoDto = partidoDto;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addPartido_args(addPartido_args other) {
      if (other.isSetPartidoDto()) {
        this.partidoDto = new ThriftPartidoDto(other.partidoDto);
      }
    }

    public addPartido_args deepCopy() {
      return new addPartido_args(this);
    }

    @Override
    public void clear() {
      this.partidoDto = null;
    }

    @org.apache.thrift.annotation.Nullable
    public ThriftPartidoDto getPartidoDto() {
      return this.partidoDto;
    }

    public addPartido_args setPartidoDto(@org.apache.thrift.annotation.Nullable ThriftPartidoDto partidoDto) {
      this.partidoDto = partidoDto;
      return this;
    }

    public void unsetPartidoDto() {
      this.partidoDto = null;
    }

    /** Returns true if field partidoDto is set (has been assigned a value) and false otherwise */
    public boolean isSetPartidoDto() {
      return this.partidoDto != null;
    }

    public void setPartidoDtoIsSet(boolean value) {
      if (!value) {
        this.partidoDto = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case PARTIDO_DTO:
        if (value == null) {
          unsetPartidoDto();
        } else {
          setPartidoDto((ThriftPartidoDto)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case PARTIDO_DTO:
        return getPartidoDto();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case PARTIDO_DTO:
        return isSetPartidoDto();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that instanceof addPartido_args)
        return this.equals((addPartido_args)that);
      return false;
    }

    public boolean equals(addPartido_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_partidoDto = true && this.isSetPartidoDto();
      boolean that_present_partidoDto = true && that.isSetPartidoDto();
      if (this_present_partidoDto || that_present_partidoDto) {
        if (!(this_present_partidoDto && that_present_partidoDto))
          return false;
        if (!this.partidoDto.equals(that.partidoDto))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetPartidoDto()) ? 131071 : 524287);
      if (isSetPartidoDto())
        hashCode = hashCode * 8191 + partidoDto.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(addPartido_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.compare(isSetPartidoDto(), other.isSetPartidoDto());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPartidoDto()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partidoDto, other.partidoDto);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("addPartido_args(");
      boolean first = true;

      sb.append("partidoDto:");
      if (this.partidoDto == null) {
        sb.append("null");
      } else {
        sb.append(this.partidoDto);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (partidoDto != null) {
        partidoDto.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addPartido_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addPartido_argsStandardScheme getScheme() {
        return new addPartido_argsStandardScheme();
      }
    }

    private static class addPartido_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<addPartido_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addPartido_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PARTIDO_DTO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.partidoDto = new ThriftPartidoDto();
                struct.partidoDto.read(iprot);
                struct.setPartidoDtoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addPartido_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.partidoDto != null) {
          oprot.writeFieldBegin(PARTIDO_DTO_FIELD_DESC);
          struct.partidoDto.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addPartido_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addPartido_argsTupleScheme getScheme() {
        return new addPartido_argsTupleScheme();
      }
    }

    private static class addPartido_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<addPartido_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addPartido_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetPartidoDto()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetPartidoDto()) {
          struct.partidoDto.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addPartido_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.partidoDto = new ThriftPartidoDto();
          struct.partidoDto.read(iprot);
          struct.setPartidoDtoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class addPartido_result implements org.apache.thrift.TBase<addPartido_result, addPartido_result._Fields>, java.io.Serializable, Cloneable, Comparable<addPartido_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addPartido_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addPartido_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addPartido_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable ThriftPartidoDto success; // required
    public @org.apache.thrift.annotation.Nullable ThriftInputValidationException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ThriftPartidoDto.class)));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ThriftInputValidationException.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addPartido_result.class, metaDataMap);
    }

    public addPartido_result() {
    }

    public addPartido_result(
      ThriftPartidoDto success,
      ThriftInputValidationException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addPartido_result(addPartido_result other) {
      if (other.isSetSuccess()) {
        this.success = new ThriftPartidoDto(other.success);
      }
      if (other.isSetE()) {
        this.e = new ThriftInputValidationException(other.e);
      }
    }

    public addPartido_result deepCopy() {
      return new addPartido_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    @org.apache.thrift.annotation.Nullable
    public ThriftPartidoDto getSuccess() {
      return this.success;
    }

    public addPartido_result setSuccess(@org.apache.thrift.annotation.Nullable ThriftPartidoDto success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public ThriftInputValidationException getE() {
      return this.e;
    }

    public addPartido_result setE(@org.apache.thrift.annotation.Nullable ThriftInputValidationException e) {
      this.e = e;
      return this;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((ThriftPartidoDto)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((ThriftInputValidationException)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that instanceof addPartido_result)
        return this.equals((addPartido_result)that);
      return false;
    }

    public boolean equals(addPartido_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
      if (isSetE())
        hashCode = hashCode * 8191 + e.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(addPartido_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.compare(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.compare(isSetE(), other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("addPartido_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addPartido_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addPartido_resultStandardScheme getScheme() {
        return new addPartido_resultStandardScheme();
      }
    }

    private static class addPartido_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<addPartido_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addPartido_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new ThriftPartidoDto();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new ThriftInputValidationException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addPartido_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addPartido_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addPartido_resultTupleScheme getScheme() {
        return new addPartido_resultTupleScheme();
      }
    }

    private static class addPartido_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<addPartido_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addPartido_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addPartido_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new ThriftPartidoDto();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new ThriftInputValidationException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class findPartidos_args implements org.apache.thrift.TBase<findPartidos_args, findPartidos_args._Fields>, java.io.Serializable, Cloneable, Comparable<findPartidos_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findPartidos_args");

    private static final org.apache.thrift.protocol.TField FECHAINCIO_FIELD_DESC = new org.apache.thrift.protocol.TField("fechaincio", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField FECHAFIN_FIELD_DESC = new org.apache.thrift.protocol.TField("fechafin", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new findPartidos_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new findPartidos_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String fechaincio; // required
    public @org.apache.thrift.annotation.Nullable java.lang.String fechafin; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      FECHAINCIO((short)1, "fechaincio"),
      FECHAFIN((short)2, "fechafin");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // FECHAINCIO
            return FECHAINCIO;
          case 2: // FECHAFIN
            return FECHAFIN;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.FECHAINCIO, new org.apache.thrift.meta_data.FieldMetaData("fechaincio", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.FECHAFIN, new org.apache.thrift.meta_data.FieldMetaData("fechafin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findPartidos_args.class, metaDataMap);
    }

    public findPartidos_args() {
    }

    public findPartidos_args(
      java.lang.String fechaincio,
      java.lang.String fechafin)
    {
      this();
      this.fechaincio = fechaincio;
      this.fechafin = fechafin;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findPartidos_args(findPartidos_args other) {
      if (other.isSetFechaincio()) {
        this.fechaincio = other.fechaincio;
      }
      if (other.isSetFechafin()) {
        this.fechafin = other.fechafin;
      }
    }

    public findPartidos_args deepCopy() {
      return new findPartidos_args(this);
    }

    @Override
    public void clear() {
      this.fechaincio = null;
      this.fechafin = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getFechaincio() {
      return this.fechaincio;
    }

    public findPartidos_args setFechaincio(@org.apache.thrift.annotation.Nullable java.lang.String fechaincio) {
      this.fechaincio = fechaincio;
      return this;
    }

    public void unsetFechaincio() {
      this.fechaincio = null;
    }

    /** Returns true if field fechaincio is set (has been assigned a value) and false otherwise */
    public boolean isSetFechaincio() {
      return this.fechaincio != null;
    }

    public void setFechaincioIsSet(boolean value) {
      if (!value) {
        this.fechaincio = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getFechafin() {
      return this.fechafin;
    }

    public findPartidos_args setFechafin(@org.apache.thrift.annotation.Nullable java.lang.String fechafin) {
      this.fechafin = fechafin;
      return this;
    }

    public void unsetFechafin() {
      this.fechafin = null;
    }

    /** Returns true if field fechafin is set (has been assigned a value) and false otherwise */
    public boolean isSetFechafin() {
      return this.fechafin != null;
    }

    public void setFechafinIsSet(boolean value) {
      if (!value) {
        this.fechafin = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case FECHAINCIO:
        if (value == null) {
          unsetFechaincio();
        } else {
          setFechaincio((java.lang.String)value);
        }
        break;

      case FECHAFIN:
        if (value == null) {
          unsetFechafin();
        } else {
          setFechafin((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case FECHAINCIO:
        return getFechaincio();

      case FECHAFIN:
        return getFechafin();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case FECHAINCIO:
        return isSetFechaincio();
      case FECHAFIN:
        return isSetFechafin();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that instanceof findPartidos_args)
        return this.equals((findPartidos_args)that);
      return false;
    }

    public boolean equals(findPartidos_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_fechaincio = true && this.isSetFechaincio();
      boolean that_present_fechaincio = true && that.isSetFechaincio();
      if (this_present_fechaincio || that_present_fechaincio) {
        if (!(this_present_fechaincio && that_present_fechaincio))
          return false;
        if (!this.fechaincio.equals(that.fechaincio))
          return false;
      }

      boolean this_present_fechafin = true && this.isSetFechafin();
      boolean that_present_fechafin = true && that.isSetFechafin();
      if (this_present_fechafin || that_present_fechafin) {
        if (!(this_present_fechafin && that_present_fechafin))
          return false;
        if (!this.fechafin.equals(that.fechafin))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetFechaincio()) ? 131071 : 524287);
      if (isSetFechaincio())
        hashCode = hashCode * 8191 + fechaincio.hashCode();

      hashCode = hashCode * 8191 + ((isSetFechafin()) ? 131071 : 524287);
      if (isSetFechafin())
        hashCode = hashCode * 8191 + fechafin.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(findPartidos_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.compare(isSetFechaincio(), other.isSetFechaincio());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFechaincio()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fechaincio, other.fechaincio);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.compare(isSetFechafin(), other.isSetFechafin());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFechafin()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fechafin, other.fechafin);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("findPartidos_args(");
      boolean first = true;

      sb.append("fechaincio:");
      if (this.fechaincio == null) {
        sb.append("null");
      } else {
        sb.append(this.fechaincio);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("fechafin:");
      if (this.fechafin == null) {
        sb.append("null");
      } else {
        sb.append(this.fechafin);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findPartidos_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public findPartidos_argsStandardScheme getScheme() {
        return new findPartidos_argsStandardScheme();
      }
    }

    private static class findPartidos_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<findPartidos_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findPartidos_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // FECHAINCIO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.fechaincio = iprot.readString();
                struct.setFechaincioIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // FECHAFIN
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.fechafin = iprot.readString();
                struct.setFechafinIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findPartidos_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.fechaincio != null) {
          oprot.writeFieldBegin(FECHAINCIO_FIELD_DESC);
          oprot.writeString(struct.fechaincio);
          oprot.writeFieldEnd();
        }
        if (struct.fechafin != null) {
          oprot.writeFieldBegin(FECHAFIN_FIELD_DESC);
          oprot.writeString(struct.fechafin);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findPartidos_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public findPartidos_argsTupleScheme getScheme() {
        return new findPartidos_argsTupleScheme();
      }
    }

    private static class findPartidos_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<findPartidos_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findPartidos_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetFechaincio()) {
          optionals.set(0);
        }
        if (struct.isSetFechafin()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetFechaincio()) {
          oprot.writeString(struct.fechaincio);
        }
        if (struct.isSetFechafin()) {
          oprot.writeString(struct.fechafin);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findPartidos_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.fechaincio = iprot.readString();
          struct.setFechaincioIsSet(true);
        }
        if (incoming.get(1)) {
          struct.fechafin = iprot.readString();
          struct.setFechafinIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class findPartidos_result implements org.apache.thrift.TBase<findPartidos_result, findPartidos_result._Fields>, java.io.Serializable, Cloneable, Comparable<findPartidos_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findPartidos_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new findPartidos_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new findPartidos_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<ThriftPartidoDto> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ThriftPartidoDto.class))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findPartidos_result.class, metaDataMap);
    }

    public findPartidos_result() {
    }

    public findPartidos_result(
      java.util.List<ThriftPartidoDto> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findPartidos_result(findPartidos_result other) {
      if (other.isSetSuccess()) {
        java.util.List<ThriftPartidoDto> __this__success = new java.util.ArrayList<ThriftPartidoDto>(other.success.size());
        for (ThriftPartidoDto other_element : other.success) {
          __this__success.add(new ThriftPartidoDto(other_element));
        }
        this.success = __this__success;
      }
    }

    public findPartidos_result deepCopy() {
      return new findPartidos_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<ThriftPartidoDto> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(ThriftPartidoDto elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<ThriftPartidoDto>();
      }
      this.success.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<ThriftPartidoDto> getSuccess() {
      return this.success;
    }

    public findPartidos_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<ThriftPartidoDto> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<ThriftPartidoDto>)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that instanceof findPartidos_result)
        return this.equals((findPartidos_result)that);
      return false;
    }

    public boolean equals(findPartidos_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(findPartidos_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.compare(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("findPartidos_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findPartidos_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public findPartidos_resultStandardScheme getScheme() {
        return new findPartidos_resultStandardScheme();
      }
    }

    private static class findPartidos_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<findPartidos_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findPartidos_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<ThriftPartidoDto>(_list0.size);
                  @org.apache.thrift.annotation.Nullable ThriftPartidoDto _elem1;
                  for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                  {
                    _elem1 = new ThriftPartidoDto();
                    _elem1.read(iprot);
                    struct.success.add(_elem1);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findPartidos_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (ThriftPartidoDto _iter3 : struct.success)
            {
              _iter3.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findPartidos_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public findPartidos_resultTupleScheme getScheme() {
        return new findPartidos_resultTupleScheme();
      }
    }

    private static class findPartidos_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<findPartidos_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findPartidos_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (ThriftPartidoDto _iter4 : struct.success)
            {
              _iter4.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findPartidos_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list5 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
            struct.success = new java.util.ArrayList<ThriftPartidoDto>(_list5.size);
            @org.apache.thrift.annotation.Nullable ThriftPartidoDto _elem6;
            for (int _i7 = 0; _i7 < _list5.size; ++_i7)
            {
              _elem6 = new ThriftPartidoDto();
              _elem6.read(iprot);
              struct.success.add(_elem6);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
