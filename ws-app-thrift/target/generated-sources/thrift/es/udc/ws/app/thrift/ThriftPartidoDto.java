/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package es.udc.ws.app.thrift;

import java.time.LocalDateTime;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2024-01-16")
public class ThriftPartidoDto implements org.apache.thrift.TBase<ThriftPartidoDto, ThriftPartidoDto._Fields>, java.io.Serializable, Cloneable, Comparable<ThriftPartidoDto> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThriftPartidoDto");

  private static final org.apache.thrift.protocol.TField PARTIDO_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("partidoId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NOMBRE_VISITANTE_FIELD_DESC = new org.apache.thrift.protocol.TField("nombreVisitante", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CELEBRACION_FIELD_DESC = new org.apache.thrift.protocol.TField("celebracion", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PRECIO_FIELD_DESC = new org.apache.thrift.protocol.TField("precio", org.apache.thrift.protocol.TType.I16, (short)4);
  private static final org.apache.thrift.protocol.TField MAX_ENTRADAS_FIELD_DESC = new org.apache.thrift.protocol.TField("maxEntradas", org.apache.thrift.protocol.TType.I16, (short)5);
  private static final org.apache.thrift.protocol.TField VENDIDAS_FIELD_DESC = new org.apache.thrift.protocol.TField("vendidas", org.apache.thrift.protocol.TType.I16, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ThriftPartidoDtoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ThriftPartidoDtoTupleSchemeFactory();

  public long partidoId; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String nombreVisitante; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String celebracion; // required
  public short precio; // required
  public short maxEntradas; // required
  public short vendidas; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PARTIDO_ID((short)1, "partidoId"),
    NOMBRE_VISITANTE((short)2, "nombreVisitante"),
    CELEBRACION((short)3, "celebracion"),
    PRECIO((short)4, "precio"),
    MAX_ENTRADAS((short)5, "maxEntradas"),
    VENDIDAS((short)6, "vendidas");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PARTIDO_ID
          return PARTIDO_ID;
        case 2: // NOMBRE_VISITANTE
          return NOMBRE_VISITANTE;
        case 3: // CELEBRACION
          return CELEBRACION;
        case 4: // PRECIO
          return PRECIO;
        case 5: // MAX_ENTRADAS
          return MAX_ENTRADAS;
        case 6: // VENDIDAS
          return VENDIDAS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PARTIDOID_ISSET_ID = 0;
  private static final int __PRECIO_ISSET_ID = 1;
  private static final int __MAXENTRADAS_ISSET_ID = 2;
  private static final int __VENDIDAS_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PARTIDO_ID, new org.apache.thrift.meta_data.FieldMetaData("partidoId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NOMBRE_VISITANTE, new org.apache.thrift.meta_data.FieldMetaData("nombreVisitante", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CELEBRACION, new org.apache.thrift.meta_data.FieldMetaData("celebracion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRECIO, new org.apache.thrift.meta_data.FieldMetaData("precio", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.MAX_ENTRADAS, new org.apache.thrift.meta_data.FieldMetaData("maxEntradas", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.VENDIDAS, new org.apache.thrift.meta_data.FieldMetaData("vendidas", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThriftPartidoDto.class, metaDataMap);
  }

  public ThriftPartidoDto() {
  }

  public ThriftPartidoDto(
          long partidoId,
          String nombreVisitante,
          LocalDateTime celebracion,
          float precio,
          int maxEntradas,
          int vendidas)
  {
    this();
    this.partidoId = partidoId;
    setPartidoIdIsSet(true);
    this.nombreVisitante = nombreVisitante;
    this.celebracion = celebracion;
    this.precio = precio;
    setPrecioIsSet(true);
    this.maxEntradas = maxEntradas;
    setMaxEntradasIsSet(true);
    this.vendidas = vendidas;
    setVendidasIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThriftPartidoDto(ThriftPartidoDto other) {
    __isset_bitfield = other.__isset_bitfield;
    this.partidoId = other.partidoId;
    if (other.isSetNombreVisitante()) {
      this.nombreVisitante = other.nombreVisitante;
    }
    if (other.isSetCelebracion()) {
      this.celebracion = other.celebracion;
    }
    this.precio = other.precio;
    this.maxEntradas = other.maxEntradas;
    this.vendidas = other.vendidas;
  }

  public ThriftPartidoDto deepCopy() {
    return new ThriftPartidoDto(this);
  }

  @Override
  public void clear() {
    setPartidoIdIsSet(false);
    this.partidoId = 0;
    this.nombreVisitante = null;
    this.celebracion = null;
    setPrecioIsSet(false);
    this.precio = 0;
    setMaxEntradasIsSet(false);
    this.maxEntradas = 0;
    setVendidasIsSet(false);
    this.vendidas = 0;
  }

  public long getPartidoId() {
    return this.partidoId;
  }

  public ThriftPartidoDto setPartidoId(long partidoId) {
    this.partidoId = partidoId;
    setPartidoIdIsSet(true);
    return this;
  }

  public void unsetPartidoId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PARTIDOID_ISSET_ID);
  }

  /** Returns true if field partidoId is set (has been assigned a value) and false otherwise */
  public boolean isSetPartidoId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PARTIDOID_ISSET_ID);
  }

  public void setPartidoIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PARTIDOID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNombreVisitante() {
    return this.nombreVisitante;
  }

  public ThriftPartidoDto setNombreVisitante(@org.apache.thrift.annotation.Nullable java.lang.String nombreVisitante) {
    this.nombreVisitante = nombreVisitante;
    return this;
  }

  public void unsetNombreVisitante() {
    this.nombreVisitante = null;
  }

  /** Returns true if field nombreVisitante is set (has been assigned a value) and false otherwise */
  public boolean isSetNombreVisitante() {
    return this.nombreVisitante != null;
  }

  public void setNombreVisitanteIsSet(boolean value) {
    if (!value) {
      this.nombreVisitante = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getCelebracion() {
    return this.celebracion;
  }

  public ThriftPartidoDto setCelebracion(@org.apache.thrift.annotation.Nullable java.lang.String celebracion) {
    this.celebracion = celebracion;
    return this;
  }

  public void unsetCelebracion() {
    this.celebracion = null;
  }

  /** Returns true if field celebracion is set (has been assigned a value) and false otherwise */
  public boolean isSetCelebracion() {
    return this.celebracion != null;
  }

  public void setCelebracionIsSet(boolean value) {
    if (!value) {
      this.celebracion = null;
    }
  }

  public short getPrecio() {
    return this.precio;
  }

  public ThriftPartidoDto setPrecio(short precio) {
    this.precio = precio;
    setPrecioIsSet(true);
    return this;
  }

  public void unsetPrecio() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRECIO_ISSET_ID);
  }

  /** Returns true if field precio is set (has been assigned a value) and false otherwise */
  public boolean isSetPrecio() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRECIO_ISSET_ID);
  }

  public void setPrecioIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRECIO_ISSET_ID, value);
  }

  public short getMaxEntradas() {
    return this.maxEntradas;
  }

  public ThriftPartidoDto setMaxEntradas(short maxEntradas) {
    this.maxEntradas = maxEntradas;
    setMaxEntradasIsSet(true);
    return this;
  }

  public void unsetMaxEntradas() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MAXENTRADAS_ISSET_ID);
  }

  /** Returns true if field maxEntradas is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxEntradas() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MAXENTRADAS_ISSET_ID);
  }

  public void setMaxEntradasIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MAXENTRADAS_ISSET_ID, value);
  }

  public short getVendidas() {
    return this.vendidas;
  }

  public ThriftPartidoDto setVendidas(short vendidas) {
    this.vendidas = vendidas;
    setVendidasIsSet(true);
    return this;
  }

  public void unsetVendidas() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VENDIDAS_ISSET_ID);
  }

  /** Returns true if field vendidas is set (has been assigned a value) and false otherwise */
  public boolean isSetVendidas() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VENDIDAS_ISSET_ID);
  }

  public void setVendidasIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VENDIDAS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case PARTIDO_ID:
      if (value == null) {
        unsetPartidoId();
      } else {
        setPartidoId((java.lang.Long)value);
      }
      break;

    case NOMBRE_VISITANTE:
      if (value == null) {
        unsetNombreVisitante();
      } else {
        setNombreVisitante((java.lang.String)value);
      }
      break;

    case CELEBRACION:
      if (value == null) {
        unsetCelebracion();
      } else {
        setCelebracion((java.lang.String)value);
      }
      break;

    case PRECIO:
      if (value == null) {
        unsetPrecio();
      } else {
        setPrecio((java.lang.Short)value);
      }
      break;

    case MAX_ENTRADAS:
      if (value == null) {
        unsetMaxEntradas();
      } else {
        setMaxEntradas((java.lang.Short)value);
      }
      break;

    case VENDIDAS:
      if (value == null) {
        unsetVendidas();
      } else {
        setVendidas((java.lang.Short)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case PARTIDO_ID:
      return getPartidoId();

    case NOMBRE_VISITANTE:
      return getNombreVisitante();

    case CELEBRACION:
      return getCelebracion();

    case PRECIO:
      return getPrecio();

    case MAX_ENTRADAS:
      return getMaxEntradas();

    case VENDIDAS:
      return getVendidas();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case PARTIDO_ID:
      return isSetPartidoId();
    case NOMBRE_VISITANTE:
      return isSetNombreVisitante();
    case CELEBRACION:
      return isSetCelebracion();
    case PRECIO:
      return isSetPrecio();
    case MAX_ENTRADAS:
      return isSetMaxEntradas();
    case VENDIDAS:
      return isSetVendidas();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof ThriftPartidoDto)
      return this.equals((ThriftPartidoDto)that);
    return false;
  }

  public boolean equals(ThriftPartidoDto that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_partidoId = true;
    boolean that_present_partidoId = true;
    if (this_present_partidoId || that_present_partidoId) {
      if (!(this_present_partidoId && that_present_partidoId))
        return false;
      if (this.partidoId != that.partidoId)
        return false;
    }

    boolean this_present_nombreVisitante = true && this.isSetNombreVisitante();
    boolean that_present_nombreVisitante = true && that.isSetNombreVisitante();
    if (this_present_nombreVisitante || that_present_nombreVisitante) {
      if (!(this_present_nombreVisitante && that_present_nombreVisitante))
        return false;
      if (!this.nombreVisitante.equals(that.nombreVisitante))
        return false;
    }

    boolean this_present_celebracion = true && this.isSetCelebracion();
    boolean that_present_celebracion = true && that.isSetCelebracion();
    if (this_present_celebracion || that_present_celebracion) {
      if (!(this_present_celebracion && that_present_celebracion))
        return false;
      if (!this.celebracion.equals(that.celebracion))
        return false;
    }

    boolean this_present_precio = true;
    boolean that_present_precio = true;
    if (this_present_precio || that_present_precio) {
      if (!(this_present_precio && that_present_precio))
        return false;
      if (this.precio != that.precio)
        return false;
    }

    boolean this_present_maxEntradas = true;
    boolean that_present_maxEntradas = true;
    if (this_present_maxEntradas || that_present_maxEntradas) {
      if (!(this_present_maxEntradas && that_present_maxEntradas))
        return false;
      if (this.maxEntradas != that.maxEntradas)
        return false;
    }

    boolean this_present_vendidas = true;
    boolean that_present_vendidas = true;
    if (this_present_vendidas || that_present_vendidas) {
      if (!(this_present_vendidas && that_present_vendidas))
        return false;
      if (this.vendidas != that.vendidas)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(partidoId);

    hashCode = hashCode * 8191 + ((isSetNombreVisitante()) ? 131071 : 524287);
    if (isSetNombreVisitante())
      hashCode = hashCode * 8191 + nombreVisitante.hashCode();

    hashCode = hashCode * 8191 + ((isSetCelebracion()) ? 131071 : 524287);
    if (isSetCelebracion())
      hashCode = hashCode * 8191 + celebracion.hashCode();

    hashCode = hashCode * 8191 + precio;

    hashCode = hashCode * 8191 + maxEntradas;

    hashCode = hashCode * 8191 + vendidas;

    return hashCode;
  }

  @Override
  public int compareTo(ThriftPartidoDto other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetPartidoId(), other.isSetPartidoId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartidoId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partidoId, other.partidoId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNombreVisitante(), other.isSetNombreVisitante());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNombreVisitante()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombreVisitante, other.nombreVisitante);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCelebracion(), other.isSetCelebracion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCelebracion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.celebracion, other.celebracion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPrecio(), other.isSetPrecio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrecio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.precio, other.precio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetMaxEntradas(), other.isSetMaxEntradas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxEntradas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxEntradas, other.maxEntradas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetVendidas(), other.isSetVendidas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVendidas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vendidas, other.vendidas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ThriftPartidoDto(");
    boolean first = true;

    sb.append("partidoId:");
    sb.append(this.partidoId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("nombreVisitante:");
    if (this.nombreVisitante == null) {
      sb.append("null");
    } else {
      sb.append(this.nombreVisitante);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("celebracion:");
    if (this.celebracion == null) {
      sb.append("null");
    } else {
      sb.append(this.celebracion);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("precio:");
    sb.append(this.precio);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxEntradas:");
    sb.append(this.maxEntradas);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vendidas:");
    sb.append(this.vendidas);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThriftPartidoDtoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThriftPartidoDtoStandardScheme getScheme() {
      return new ThriftPartidoDtoStandardScheme();
    }
  }

  private static class ThriftPartidoDtoStandardScheme extends org.apache.thrift.scheme.StandardScheme<ThriftPartidoDto> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThriftPartidoDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PARTIDO_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.partidoId = iprot.readI64();
              struct.setPartidoIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NOMBRE_VISITANTE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nombreVisitante = iprot.readString();
              struct.setNombreVisitanteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CELEBRACION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.celebracion = iprot.readString();
              struct.setCelebracionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRECIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.precio = iprot.readI16();
              struct.setPrecioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MAX_ENTRADAS
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.maxEntradas = iprot.readI16();
              struct.setMaxEntradasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // VENDIDAS
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.vendidas = iprot.readI16();
              struct.setVendidasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThriftPartidoDto struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PARTIDO_ID_FIELD_DESC);
      oprot.writeI64(struct.partidoId);
      oprot.writeFieldEnd();
      if (struct.nombreVisitante != null) {
        oprot.writeFieldBegin(NOMBRE_VISITANTE_FIELD_DESC);
        oprot.writeString(struct.nombreVisitante);
        oprot.writeFieldEnd();
      }
      if (struct.celebracion != null) {
        oprot.writeFieldBegin(CELEBRACION_FIELD_DESC);
        oprot.writeString(struct.celebracion);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PRECIO_FIELD_DESC);
      oprot.writeI16(struct.precio);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_ENTRADAS_FIELD_DESC);
      oprot.writeI16(struct.maxEntradas);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VENDIDAS_FIELD_DESC);
      oprot.writeI16(struct.vendidas);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThriftPartidoDtoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThriftPartidoDtoTupleScheme getScheme() {
      return new ThriftPartidoDtoTupleScheme();
    }
  }

  private static class ThriftPartidoDtoTupleScheme extends org.apache.thrift.scheme.TupleScheme<ThriftPartidoDto> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThriftPartidoDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetPartidoId()) {
        optionals.set(0);
      }
      if (struct.isSetNombreVisitante()) {
        optionals.set(1);
      }
      if (struct.isSetCelebracion()) {
        optionals.set(2);
      }
      if (struct.isSetPrecio()) {
        optionals.set(3);
      }
      if (struct.isSetMaxEntradas()) {
        optionals.set(4);
      }
      if (struct.isSetVendidas()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetPartidoId()) {
        oprot.writeI64(struct.partidoId);
      }
      if (struct.isSetNombreVisitante()) {
        oprot.writeString(struct.nombreVisitante);
      }
      if (struct.isSetCelebracion()) {
        oprot.writeString(struct.celebracion);
      }
      if (struct.isSetPrecio()) {
        oprot.writeI16(struct.precio);
      }
      if (struct.isSetMaxEntradas()) {
        oprot.writeI16(struct.maxEntradas);
      }
      if (struct.isSetVendidas()) {
        oprot.writeI16(struct.vendidas);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThriftPartidoDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.partidoId = iprot.readI64();
        struct.setPartidoIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.nombreVisitante = iprot.readString();
        struct.setNombreVisitanteIsSet(true);
      }
      if (incoming.get(2)) {
        struct.celebracion = iprot.readString();
        struct.setCelebracionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.precio = iprot.readI16();
        struct.setPrecioIsSet(true);
      }
      if (incoming.get(4)) {
        struct.maxEntradas = iprot.readI16();
        struct.setMaxEntradasIsSet(true);
      }
      if (incoming.get(5)) {
        struct.vendidas = iprot.readI16();
        struct.setVendidasIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

